name: Google Cloud Run Deploy
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCR_PROJECT }}
  RUN_REGION: europe-north1
  SERVICE_NAME: tiira-watcher
  REPO_NAME: tiira-watcher-repo
  UI_SERVER_ADDRESS: ${{ secrets.UI_SERVER_ADDRESS }}

jobs:
  build:
    name: Build tiira-watcher with leiningen
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18.0.2+9'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.4
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          lein: latest             # Leiningen

      # Optional step:
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('project.clj') }}
          restore-keys: cljdeps-

      - name: Compile code
        run: lein uberjar

      - name: Set version
        run: echo "VERSION=$(head -1 project.clj | cut -d " " -f 3 | sed -e 's/"//g')" | tee -a $GITHUB_ENV

      - name: Archive Artifact
        uses: actions/upload-artifact@main
        with:
          name: jar
          path: target/tiira-watcher-${{ env.VERSION }}-standalone.jar

  store-srt:
    name: Save search-request-trigger into gcs
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: search-request-trigger

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      - name: Set version
        run: echo "VERSION=$(grep version package.json | cut -d "\"" -f 4)" | tee -a $GITHUB_ENV

      - name: Store version file
        run: |
          echo $VERSION > srt_version.txt
          gcloud storage cp srt_version.txt gs://${{ secrets.GCR_PROJECT }}-terraform-backend/app_versions/

      - name: Store sources
        run: |
          zip -r search-request-trigger.zip package.json src/
          gcloud storage cp search-request-trigger.zip gs://${{ secrets.GCR_PROJECT }}-terraform-backend/search-request-trigger/


  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: jar
          path: docker/target/

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      - name: Set version
        run: echo "VERSION=$(head -1 project.clj | cut -d " " -f 3 | sed -e 's/"//g')" | tee -a $GITHUB_ENV

      - name: Store version file
        run: |
          echo $VERSION > server_version.txt
          gcloud storage cp server_version.txt gs://${{ secrets.GCR_PROJECT }}-terraform-backend/app_versions/

      - name: Rename jar file
        run: mv docker/target/tiira-watcher-${{ env.VERSION }}-standalone.jar docker/target/tiira-watcher.jar

      # Build and push image to Google Container Registry
      - name: Build & Push
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "$RUN_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:${{ env.VERSION }}"
        working-directory: docker
